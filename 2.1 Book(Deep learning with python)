{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"2.1 Book(Deep learning with python)","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"PPj2tZ8PByta","colab_type":"code","colab":{}},"source":["# import keras\n","\n","import keras"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"MiGHbns-CHyI","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"fe90cd51-47df-4ccf-deaf-d1e88c938179","executionInfo":{"status":"ok","timestamp":1578306156005,"user_tz":-300,"elapsed":1163,"user":{"displayName":"Ahmed Ghani","photoUrl":"","userId":"15127856023220592088"}}},"source":["# checking version of keras\n","\n","keras.__version__"],"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'2.2.5'"]},"metadata":{"tags":[]},"execution_count":47}]},{"cell_type":"code","metadata":{"id":"7zKT14vmCMQK","colab_type":"code","colab":{}},"source":["# import library\n","\n","from keras.datasets import mnist\n","\n","# load_data as train and test sets\n","\n","(train_images,train_labels), (test_images, test_labels) =mnist.load_data()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"jjCe6mebDim3","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"8c8b2b16-9e03-44c9-e905-5414c02463e3","executionInfo":{"status":"ok","timestamp":1578306157737,"user_tz":-300,"elapsed":2021,"user":{"displayName":"Ahmed Ghani","photoUrl":"","userId":"15127856023220592088"}}},"source":["train_images.shape"],"execution_count":49,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(60000, 28, 28)"]},"metadata":{"tags":[]},"execution_count":49}]},{"cell_type":"code","metadata":{"id":"dhHKzfwWDu_K","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"8e78d5f4-a2cf-425c-abbd-ffddcc51ada0","executionInfo":{"status":"ok","timestamp":1578306157739,"user_tz":-300,"elapsed":1791,"user":{"displayName":"Ahmed Ghani","photoUrl":"","userId":"15127856023220592088"}}},"source":["train_labels.shape"],"execution_count":50,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(60000,)"]},"metadata":{"tags":[]},"execution_count":50}]},{"cell_type":"code","metadata":{"id":"afgnLWZ1D1-h","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"21f3f3b5-42fc-4152-a48f-5eac860bb9c6","executionInfo":{"status":"ok","timestamp":1578306157741,"user_tz":-300,"elapsed":1607,"user":{"displayName":"Ahmed Ghani","photoUrl":"","userId":"15127856023220592088"}}},"source":["test_images.shape"],"execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(10000, 28, 28)"]},"metadata":{"tags":[]},"execution_count":51}]},{"cell_type":"code","metadata":{"id":"pgZHuPj7D-WK","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"cc52cb05-e700-432b-d6ed-54bdca293fdb","executionInfo":{"status":"ok","timestamp":1578306157742,"user_tz":-300,"elapsed":1454,"user":{"displayName":"Ahmed Ghani","photoUrl":"","userId":"15127856023220592088"}}},"source":["len(test_labels)"],"execution_count":52,"outputs":[{"output_type":"execute_result","data":{"text/plain":["10000"]},"metadata":{"tags":[]},"execution_count":52}]},{"cell_type":"markdown","metadata":{"id":"pi4UTzSOEM7R","colab_type":"text"},"source":["Let's build our network -- again, remember that you aren't supposed to \n","understand everything about this example just yet."]},{"cell_type":"code","metadata":{"id":"olXuv4WeEB9S","colab_type":"code","colab":{}},"source":["from keras import models\n","from keras import layers\n","\n","network = models.Sequential()\n","network.add(layers.Dense(512, activation='relu', input_shape=(28 * 28,)))\n","network.add(layers.Dense(10, activation='softmax'))"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"rsDyUPq7E0Ej","colab_type":"code","colab":{}},"source":["network.compile(optimizer='rmsprop',\n","                loss='categorical_crossentropy',\n","                metrics=['accuracy'])"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"9q_8kiOjUvhE","colab_type":"text"},"source":["Before training, we will preprocess our data by reshaping it into the shape that the network expects, and scaling it so that all values are in the [0, 1] interval. Previously, our training images for instance were stored in an array of shape (60000, 28, 28) of type uint8 with values in the [0, 255] interval. We transform it into a float32 array of shape (60000, 28 * 28) with values between 0 and 1."]},{"cell_type":"code","metadata":{"id":"lUUp2XnjUBGs","colab_type":"code","colab":{}},"source":["train_images = train_images.reshape((60000, 28 * 28))\n","train_images = train_images.astype('float32') / 255\n","\n","test_images = test_images.reshape((10000, 28 * 28))\n","test_images = test_images.astype('float32') / 255"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"UY3zeoP0VnbR","colab_type":"text"},"source":["We also need to categorically encode the labels, a step which we explain in chapter 3:"]},{"cell_type":"code","metadata":{"id":"Mh00RxvUVc9K","colab_type":"code","colab":{}},"source":["from keras.utils import to_categorical\n","\n","train_labels = to_categorical(train_labels)\n","test_labels = to_categorical(test_labels)"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"7lOcooEqWnmT","colab_type":"text"},"source":["We are now ready to train our network, which in Keras is done via a call to the fit method of the network: we \"fit\" the model to its training data."]},{"cell_type":"code","metadata":{"id":"HbUYP3v3WURs","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":394},"outputId":"d22f1785-d7ce-4b1a-8b84-0427a72df4b6","executionInfo":{"status":"ok","timestamp":1578306179684,"user_tz":-300,"elapsed":21828,"user":{"displayName":"Ahmed Ghani","photoUrl":"","userId":"15127856023220592088"}}},"source":["network.fit(train_images, train_labels, epochs=5, batch_size=128)"],"execution_count":57,"outputs":[{"output_type":"stream","text":["Epoch 1/5\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:190: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:197: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:207: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:216: The name tf.is_variable_initialized is deprecated. Please use tf.compat.v1.is_variable_initialized instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:223: The name tf.variables_initializer is deprecated. Please use tf.compat.v1.variables_initializer instead.\n","\n","60000/60000 [==============================] - 5s 76us/step - loss: 0.2623 - acc: 0.9239\n","Epoch 2/5\n","60000/60000 [==============================] - 4s 64us/step - loss: 0.1088 - acc: 0.9678\n","Epoch 3/5\n","60000/60000 [==============================] - 4s 65us/step - loss: 0.0717 - acc: 0.9788\n","Epoch 4/5\n","60000/60000 [==============================] - 4s 65us/step - loss: 0.0519 - acc: 0.9843\n","Epoch 5/5\n","60000/60000 [==============================] - 4s 64us/step - loss: 0.0399 - acc: 0.9879\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7fa12c4c66d8>"]},"metadata":{"tags":[]},"execution_count":57}]},{"cell_type":"code","metadata":{"id":"VxXu3GEIW5e8","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"dc21c6d1-1fbd-4f28-9171-235eea47343b","executionInfo":{"status":"ok","timestamp":1578306296887,"user_tz":-300,"elapsed":1354,"user":{"displayName":"Ahmed Ghani","photoUrl":"","userId":"15127856023220592088"}}},"source":["test_loss , test_acc = network.evaluate(test_images,test_labels)"],"execution_count":59,"outputs":[{"output_type":"stream","text":["10000/10000 [==============================] - 1s 52us/step\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"bYj0rARhYhkJ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"003d14de-02a7-42ea-c3a6-ae4a2a1d0783","executionInfo":{"status":"ok","timestamp":1578306356543,"user_tz":-300,"elapsed":1172,"user":{"displayName":"Ahmed Ghani","photoUrl":"","userId":"15127856023220592088"}}},"source":["print('test accuracy:',test_acc)"],"execution_count":60,"outputs":[{"output_type":"stream","text":["test accuracy: 0.9788\n"],"name":"stdout"}]}]}